{"version":3,"sources":["config.js","firebase-config.js","components/CreateTag.js","pages/SignInPage/index.js","components/AppLayout/index.js","data.js","pages/ListsOverviewPage/index.js","hooks/useDialog.js","pages/TodosPage/ShareListDialog.js","pages/TodosPage/index.js","pages/Routing.js","FetchProvider.js","App.js","index.js"],"names":["config","apiHost","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","auth","firestore","googleAuthProvider","GoogleAuthProvider","enablePersistence","catch","error","code","console","CreateTag","onCreate","text","props","useState","value","setValue","editable","setEditable","handleConfirm","trim","autoFocus","type","size","className","onChange","e","target","onBlur","onPressEnter","onClick","PlusOutlined","Title","Typography","SignInPage","a","signInWithPopup","result","log","Content","level","AppLayout","children","currentUser","displayName","photoURL","style","backgroundColor","Header","justify","color","gutter","src","signOut","padding","margin","width","getListsRef","collection","getTodosRef","title","setTitle","handleCreate","flex","placeholder","shape","icon","PlusCircleOutlined","ListsOverviewPage","uid","email","listsRef","query","where","useCollectionData","idField","useListsData","lists","add","createdAt","FieldValue","serverTimestamp","shared","id","doc","delete","header","bordered","map","item","Item","key","to","DeleteOutlined","handleRemove","useDialog","resolveRef","useRef","isOpen","setIsOpen","initialData","setInitialData","Promise","resolve","current","open","close","payload","ShareListDialog","arrayUnion","arrayRemove","TodosPage","listId","useParams","history","useHistory","shareDialog","todosRef","useTodosData","todos","list","useDocument","listDoc","data","useListData","isDone","update","paddingTop","onBack","goBack","column","label","closable","onClose","handleUnshare","todo","checked","handleToggleTodo","LoginRouting","path","AppRouting","exact","Routing","useAuthState","user","FetchProvider","fetchOptions","interceptors","request","options","url","route","headers","response","res","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0da82d89.chunk.js","sourcesContent":["const config = {\n  apiHost: process.env.REACT_APP_API_HOST,\n\n  firebaseConfig: {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  },\n};\n\nexport default config;\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport config from \"./config\";\n\nfirebase.initializeApp(config.firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nfirestore.enablePersistence().catch(function (error) {\n  if (error.code === \"failed-precondition\") {\n    // Multiple tabs open, persistence can only be enabled\n    // in one tab at a a time.\n  } else if (error.code === \"unimplemented\") {\n    // The current browser does not support all of the\n    // features required to enable persistence\n  }\n  console.error(error);\n});\n","import React, {  useState } from \"react\";\nimport { Input, Tag } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nfunction CreateTag({ onCreate, text, ...props }) {\n  const [value, setValue] = useState(\"\");\n  const [editable, setEditable] = useState(\"\");\n\n  function handleConfirm() {\n    if (value.trim() !== '') {\n      onCreate(value);\n    }\n\n    setValue('');\n    setEditable(false);\n  }\n\n  return editable ? (\n    <Input\n      autoFocus\n      type=\"text\"\n      size=\"small\"\n      className=\"tag-input\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onBlur={handleConfirm}\n      onPressEnter={handleConfirm}\n    />\n  ) : (\n    <Tag {...props} className=\"site-tag-plus\" onClick={() => setEditable(true)}>\n      <PlusOutlined /> {text}\n    </Tag>\n  );\n}\n\nexport default CreateTag;\n","import React from \"react\";\n\nimport { auth, googleAuthProvider } from \"firebase-config\";\nimport { Button, Layout, Typography } from \"components\";\n\nimport \"./index.css\";\n\nconst { Title } = Typography;\n\nfunction SignInPage() {\n  async function signInWithGoogle() {\n    try {\n      const result = await auth.signInWithPopup(googleAuthProvider);\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <Layout>\n      <Layout.Content>\n        <div className=\"login-content\">\n          <Title level={2}>Shared Todos</Title>\n          <Button onClick={signInWithGoogle}>Sign in with google</Button>\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default SignInPage;\n","import React from \"react\";\n\nimport { auth } from \"firebase-config\";\nimport { Button, Layout, Avatar, Row, Col, Typography } from \"components\";\n\nfunction AppLayout({ children }) {\n  const { displayName, photoURL } = auth.currentUser;\n\n  function logout() {\n    auth.signOut();\n  }\n\n  return (\n    <Layout style={{ backgroundColor: \"white\" }}>\n      <Layout.Header>\n        <Row justify=\"space-between\">\n          <div>\n            <Typography style={{ color: \"white\" }} level={3}>\n              Shared Todos\n            </Typography>\n          </div>\n          <Row gutter={16}>\n            <Col>\n              <Avatar size={36} src={photoURL} />\n            </Col>\n            <Col>\n              <Typography style={{ color: \"white\" }} level={3}>\n                {displayName}\n              </Typography>\n            </Col>\n            <Col>\n              <Button onClick={logout}>logout</Button>\n            </Col>\n          </Row>\n        </Row>\n      </Layout.Header>\n      <Layout.Content style={{ padding: \"25px\", margin: \"0 auto\" }}>\n        <div style={{ width: 500 }}>{children}</div>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default AppLayout;\n","import { useCollectionData, useDocument } from \"react-firebase-hooks/firestore\";\n\nimport { firestore } from \"firebase-config\";\n\nexport function getListsRef() {\n  const listsRef = firestore.collection(\"lists\");\n\n  return listsRef;\n}\n\nexport function getTodosRef() {\n  const todosRef = firestore.collection(\"todos\");\n\n  return todosRef;\n}\n\nexport function useListsData(email) {\n  const listsRef = getListsRef();\n  const query = listsRef.where(\"shared\", \"array-contains\", email);\n\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n\nexport function useListData(listId) {\n  const [listDoc] = useDocument(firestore.doc(`lists/${listId}`));\n  const list = listDoc && listDoc.data();\n\n  return list;\n}\n\nexport function useTodosData(listId) {\n  const todosRef = getTodosRef();\n  const query = todosRef.where(\"listId\", \"==\", listId);\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase\";\nimport { DeleteOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\n\nimport AppLayout from \"components/AppLayout\";\nimport { auth } from \"firebase-config\";\nimport { getListsRef, useListsData } from \"data\";\nimport { Button, List, Input, Col, Row } from \"components\";\n\nfunction Header({ onCreate }) {\n  const [title, setTitle] = useState(\"\");\n\n  function handleCreate(title) {\n    if (title.trim() === \"\") {\n      return;\n    }\n\n    onCreate(title);\n    setTitle(\"\");\n  }\n\n  return (\n    <Row gutter={16}>\n      <Col flex={1}>\n        <Input\n          placeholder=\"Add new list...\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onPressEnter={() => handleCreate(title)}\n        />\n      </Col>\n      <Col>\n        <Button\n          shape=\"circle\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => handleCreate(title)}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction ListsOverviewPage() {\n  const { uid, email } = auth.currentUser;\n\n  const listsRef = getListsRef();\n  const [lists] = useListsData(email);\n\n  async function handleCreate(title) {\n    await listsRef.add({\n      title,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      shared: [email],\n    });\n  }\n\n  async function handleRemove(id) {\n    await listsRef.doc(id).delete();\n  }\n\n  return (\n    <AppLayout title=\"lists overview\">\n      <List header={<Header onCreate={handleCreate} />} bordered>\n        {lists &&\n          lists.map((item) => (\n            <List.Item key={item.id}>\n              <Link to={`/${item.id}`}>{item.title}</Link>\n              <Button\n                shape=\"circle\"\n                icon={<DeleteOutlined />}\n                onClick={() => handleRemove(item.id)}\n              />\n            </List.Item>\n          ))}\n      </List>\n    </AppLayout>\n  );\n}\n\nexport default ListsOverviewPage;\n","import { useRef, useState } from \"react\";\n\nfunction useDialog() {\n  const resolveRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n\n  async function open(initialData) {\n    setInitialData(initialData);\n    setIsOpen(true);\n    return new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n\n  function close(payload) {\n    setInitialData(null);\n    setIsOpen(false);\n    resolveRef.current && resolveRef.current(payload);\n  }\n\n  return { isOpen, initialData, open, close };\n}\n\nexport default useDialog;\n","import React, { useState } from \"react\";\n\nimport { Input } from \"components\";\n\nfunction ShareListDialog({ onShare }) {\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <Input\n      autoFocus\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n      onPressEnter={() => onShare(email)}\n    />\n  );\n}\n\nexport default ShareListDialog;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { DeleteOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport * as firebase from \"firebase\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth } from \"firebase-config\";\nimport {\n  Button,\n  Col,\n  Input,\n  List,\n  PageHeader,\n  Row,\n  Checkbox,\n  Popover,\n  Descriptions,\n  Tag,\n  CreateTag,\n} from \"components\";\nimport ShareListDialog from \"./ShareListDialog\";\nimport { getListsRef, getTodosRef, useListData, useTodosData } from \"data\";\n\nconst {\n  serverTimestamp,\n  arrayUnion,\n  arrayRemove,\n} = firebase.firestore.FieldValue;\n\nfunction Header({ onCreate }) {\n  const [title, setTitle] = useState(\"\");\n\n  function handleCreate(title) {\n    if (title.trim() === \"\") {\n      return;\n    }\n\n    onCreate(title);\n    setTitle(\"\");\n  }\n\n  return (\n    <Row gutter={16}>\n      <Col flex={1}>\n        <Input\n          placeholder=\"Add new list...\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onPressEnter={() => handleCreate(title)}\n        />\n      </Col>\n      <Col>\n        <Button\n          shape=\"circle\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => handleCreate(title)}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction TodosPage() {\n  const { uid } = auth.currentUser;\n  const { listId } = useParams();\n  const history = useHistory();\n\n  const shareDialog = useDialog();\n\n  const listsRef = getListsRef();\n  const todosRef = getTodosRef();\n\n  const [todos] = useTodosData(listId);\n  const list = useListData(listId) || {};\n\n  async function handleCreate(title) {\n    await todosRef.add({\n      listId,\n      uid,\n      title,\n      isDone: false,\n      createdAt: serverTimestamp(),\n    });\n  }\n\n  async function handleToggleTodo(id, isDone) {\n    await todosRef.doc(id).update({ isDone: !isDone });\n  }\n\n  async function handleRemove(id) {\n    await todosRef.doc(id).delete();\n  }\n\n  async function handleOpenShareDialog() {\n    await shareDialog.open();\n  }\n\n  async function handleShare(email) {\n    await listsRef.doc(listId).update({\n      shared: arrayUnion(email),\n    });\n\n    shareDialog.close();\n  }\n\n  async function handleUnshare(email) {\n    if (auth.currentUser.email === email || list.uid !== uid) {\n      return;\n    }\n\n    await listsRef.doc(listId).update({\n      shared: arrayRemove(email),\n    });\n  }\n\n  return (\n    <AppLayout title=\"todos\">\n      <PageHeader\n        style={{paddingTop: 0}}\n        title={list.title}\n        onBack={() => history.goBack()}\n      >\n        <Descriptions size=\"small\" column={3}>\n          <Descriptions.Item label=\"Members\">\n            {list.shared &&\n              list.shared.map((email) => (\n                <Tag\n                  key={email}\n                  closable={\n                    auth.currentUser.email !== email && list.uid === uid\n                  }\n                  onClose={() => handleUnshare(email)}\n                >\n                  {email}\n                </Tag>\n              ))}\n            <CreateTag key=\"add-new-tag\" text=\"Add Member\" onCreate={handleShare} />\n          </Descriptions.Item>\n        </Descriptions>\n        <List header={<Header onCreate={handleCreate} />} bordered>\n          {todos &&\n            todos.map((todo) => (\n              <List.Item key={todo.id}>\n                <Checkbox\n                  checked={todo.isDone}\n                  onChange={() => handleToggleTodo(todo.id, todo.isDone)}\n                >\n                  {todo.title}\n                </Checkbox>\n                <Button\n                  shape=\"circle\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemove(todo.id)}\n                />\n              </List.Item>\n            ))}\n        </List>\n      </PageHeader>\n    </AppLayout>\n  );\n}\n\nexport default TodosPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"firebase-config\";\n\nimport SignInPage from \"./SignInPage\";\nimport ListsOverviewPage from \"./ListsOverviewPage\";\nimport TodosPage from \"./TodosPage\";\n\nfunction LoginRouting() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SignInPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppRouting() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <ListsOverviewPage />\n      </Route>\n      <Route exact path=\"/:listId\">\n        <TodosPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction Routing() {\n  const [user, loading] = useAuthState(auth);\n\n  return loading ? <div>loading...</div> : (\n    <Router>{user ? <AppRouting /> : <LoginRouting />}</Router>\n  );\n}\n\nexport default Routing;\n","import React from \"react\";\nimport { Provider } from \"use-http\";\nimport config from \"./config\";\n\nexport const FetchProvider = (props) => {\n  const fetchOptions = {\n    interceptors: {\n      request: async ({ options, url, path, route }) => {\n        options.headers[\"Content-Type\"] = `application/json`;\n        // options.headers[\"Authorization\"] = accessToken;\n        return options;\n      },\n      response: async ({ response }) => {\n        const res = response;\n        return res;\n      },\n    },\n  };\n\n  return <Provider url={config.apiHost} options={fetchOptions} {...props} />;\n};\n","import React from \"react\";\nimport Routing from \"./pages/Routing\";\nimport { FetchProvider } from \"FetchProvider\";\n\nexport default function App() {\n  return (\n    <FetchProvider>\n      <Routing />\n    </FetchProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport 'antd/dist/antd.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}