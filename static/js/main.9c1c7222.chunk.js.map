{"version":3,"sources":["config.js","firebase-config.js","pages/SignInPage/index.js","components/AppLayout/index.js","hooks/useDialog.js","pages/ListsOverviewPage/CreateListDialog.js","data.js","pages/ListsOverviewPage/index.js","pages/TodosPage/CreateTodoDialog.js","pages/TodosPage/ShareListDialog.js","pages/TodosPage/index.js","pages/Routing.js","FetchProvider.js","App.js","index.js"],"names":["config","apiHost","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","auth","firestore","googleAuthProvider","GoogleAuthProvider","enablePersistence","catch","error","code","console","SignInPage","a","signInWithPopup","result","log","onClick","AppLayout","children","title","currentUser","name","photoURL","width","height","src","alt","signOut","useDialog","resolveRef","useRef","useState","isOpen","setIsOpen","initialData","setInitialData","Promise","resolve","current","open","close","payload","CreateListDialog","setTitle","type","value","onChange","e","target","getListsRef","collection","getTodosRef","ListsOverviewPage","uid","email","createDialog","listsRef","query","where","useCollectionData","idField","useListsData","lists","add","createdAt","FieldValue","serverTimestamp","shared","id","doc","delete","map","item","key","to","handleRemove","CreateTodoDialog","ShareListDialog","onShare","setEmail","arrayUnion","arrayRemove","TodosPage","listId","useParams","shareDialog","todosRef","useTodosData","todos","list","useDocument","listDoc","data","useListData","isDone","update","handleUnshare","todo","checked","handleToggleTodo","LoginRouting","path","AppRouting","exact","Routing","useAuthState","user","FetchProvider","props","fetchOptions","interceptors","request","options","url","route","headers","response","res","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c1c7222.chunk.js","sourcesContent":["const config = {\n  apiHost: process.env.REACT_APP_API_HOST,\n\n  firebaseConfig: {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  },\n};\n\nexport default config;\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport config from \"./config\";\n\nfirebase.initializeApp(config.firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nfirestore.enablePersistence().catch(function (error) {\n  if (error.code === \"failed-precondition\") {\n    // Multiple tabs open, persistence can only be enabled\n    // in one tab at a a time.\n  } else if (error.code === \"unimplemented\") {\n    // The current browser does not support all of the\n    // features required to enable persistence\n  }\n  console.error(error);\n});\n","import React from \"react\";\n\nimport { auth, googleAuthProvider } from \"firebase-config\";\n\nfunction SignInPage() {\n  async function signInWithGoogle() {\n    try {\n      const result = await auth.signInWithPopup(googleAuthProvider);\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={signInWithGoogle}>Sign in with google</button>\n    </div>\n  );\n}\n\nexport default SignInPage;\n","import React from \"react\";\n\nimport { auth } from \"firebase-config\";\n\nfunction AppLayout({ children, title }) {\n  const { name, photoURL } = auth.currentUser;\n\n  function logout() {\n    auth.signOut();\n  }\n\n  return (\n    <div>\n      <div>\n        <div>{name}</div>\n        <img width={48} height={48} src={photoURL} alt=\"\" />\n        <button onClick={logout}>logout</button>\n      </div>\n      {title && (\n        <div>\n          <strong>{title}</strong>\n        </div>\n      )}\n      <div>{children}</div>\n    </div>\n  );\n}\n\nexport default AppLayout;\n","import { useRef, useState } from \"react\";\n\nfunction useDialog() {\n  const resolveRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n\n  async function open(initialData) {\n    setInitialData(initialData);\n    setIsOpen(true);\n    return new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n\n  function close(payload) {\n    setInitialData(null);\n    setIsOpen(false);\n    resolveRef.current && resolveRef.current(payload);\n  }\n\n  return { isOpen, initialData, open, close };\n}\n\nexport default useDialog;\n","import React, { useState } from \"react\";\n\nfunction CreateListDialog({ close }) {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => close({ title })}>create</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateListDialog;\n","import { useCollectionData, useDocument } from \"react-firebase-hooks/firestore\";\n\nimport { firestore } from \"firebase-config\";\n\nexport function getListsRef() {\n  const listsRef = firestore.collection(\"lists\");\n\n  return listsRef;\n}\n\nexport function getTodosRef() {\n  const todosRef = firestore.collection(\"todos\");\n\n  return todosRef;\n}\n\nexport function useListsData(email) {\n  const listsRef = getListsRef();\n  const query = listsRef.where(\"shared\", \"array-contains\", email);\n\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n\nexport function useListData(listId) {\n  const [listDoc] = useDocument(firestore.doc(`lists/${listId}`));\n  const list = listDoc && listDoc.data();\n\n  return list;\n}\n\nexport function useTodosData(listId) {\n  const todosRef = getTodosRef();\n  const query = todosRef.where(\"listId\", \"==\", listId);\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth } from \"firebase-config\";\nimport CreateListDialog from \"./CreateListDialog\";\nimport { getListsRef, useListsData } from \"data\";\n\nfunction ListsOverviewPage() {\n  const { uid, email } = auth.currentUser;\n\n  const createDialog = useDialog();\n\n  const listsRef = getListsRef();\n  const [lists] = useListsData(email);\n\n  async function handleCreate() {\n    const result = await createDialog.open();\n\n    if (!result) return;\n\n    await listsRef.add({\n      title: result.title,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      shared: [email],\n    });\n  }\n\n  async function handleRemove(id) {\n    await listsRef.doc(id).delete();\n  }\n\n  return (\n    <AppLayout title=\"lists overview\">\n      <button onClick={handleCreate}>create list</button>\n      <div>\n        {lists &&\n          lists.map((item) => (\n            <div key={item.id}>\n              <span>{item.id}</span>{\" \"}\n              <Link to={`/${item.id}`}>{item.title}</Link>\n              <button onClick={() => handleRemove(item.id)}>remove</button>\n            </div>\n          ))}\n      </div>\n      {createDialog.isOpen && <CreateListDialog {...createDialog} />}\n    </AppLayout>\n  );\n}\n\nexport default ListsOverviewPage;\n","import React, { useState } from \"react\";\n\nfunction CreateTodoDialog({ close }) {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => close({ title })}>create</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateTodoDialog;\n","import React, { useState } from \"react\";\n\nfunction ShareListDialog({ onShare, close }) {\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => onShare(email)}>share</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ShareListDialog;\n","import React, { Fragment } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth } from \"firebase-config\";\nimport * as firebase from \"firebase\";\nimport CreateTodoDialog from \"./CreateTodoDialog\";\nimport ShareListDialog from \"./ShareListDialog\";\nimport { getListsRef, getTodosRef, useListData, useTodosData } from \"data\";\n\nconst {\n  serverTimestamp,\n  arrayUnion,\n  arrayRemove,\n} = firebase.firestore.FieldValue;\n\nfunction TodosPage() {\n  const { uid } = auth.currentUser;\n  const { listId } = useParams();\n\n  const createDialog = useDialog();\n  const shareDialog = useDialog();\n\n  const listsRef = getListsRef();\n  const todosRef = getTodosRef();\n\n  const [todos] = useTodosData(listId);\n  const list = useListData(listId);\n\n  async function handleCreate() {\n    const result = await createDialog.open();\n\n    if (!result) return;\n\n    await todosRef.add({\n      listId,\n      uid,\n      title: result.title,\n      isDone: false,\n      createdAt: serverTimestamp(),\n    });\n  }\n\n  async function handleToggleTodo(id, isDone) {\n    await todosRef.doc(id).update({ isDone: !isDone });\n  }\n\n  async function handleOpenShareDialog() {\n    await shareDialog.open();\n  }\n\n  async function handleShare(email) {\n    await listsRef.doc(listId).update({\n      shared: arrayUnion(email),\n    });\n\n    shareDialog.close();\n  }\n\n  async function handleUnshare(email) {\n    if (auth.currentUser.email === email || list.uid !== uid) {\n      return;\n    }\n\n    await listsRef.doc(listId).update({\n      shared: arrayRemove(email),\n    });\n  }\n\n  return (\n    <AppLayout title=\"todos\">\n      <Link to=\"/\">{\"<--\"} back</Link>\n      {list && (\n        <Fragment>\n          <div>{list.title}</div>\n          {list.shared && (\n            <div>\n              shared with:{\" \"}\n              <i>\n                {list.shared.map((email) => (\n                  <span onClick={() => handleUnshare(email)}> {email} </span>\n                ))}\n              </i>\n            </div>\n          )}\n        </Fragment>\n      )}\n      <button onClick={handleCreate}>create todo</button>\n      <button onClick={handleOpenShareDialog}>share</button>\n      <div>\n        {todos &&\n          todos.map((todo) => (\n            <div key={todo.id}>\n              <input\n                type=\"checkbox\"\n                checked={todo.isDone}\n                onChange={() => handleToggleTodo(todo.id, todo.isDone)}\n              />\n              <span>{todo.id}</span> <span>{todo.title}</span>\n            </div>\n          ))}\n      </div>\n      {createDialog.isOpen && <CreateTodoDialog {...createDialog} />}\n      {shareDialog.isOpen && (\n        <ShareListDialog {...shareDialog} onShare={handleShare} />\n      )}\n    </AppLayout>\n  );\n}\n\nexport default TodosPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"firebase-config\";\n\nimport SignInPage from \"./SignInPage\";\nimport ListsOverviewPage from \"./ListsOverviewPage\";\nimport TodosPage from \"./TodosPage\";\n\nfunction LoginRouting() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SignInPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppRouting() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <ListsOverviewPage />\n      </Route>\n      <Route exact path=\"/:listId\">\n        <TodosPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction Routing() {\n  const [user, loading] = useAuthState(auth);\n\n  return loading ? <div>loading...</div> : (\n    <Router>{user ? <AppRouting /> : <LoginRouting />}</Router>\n  );\n}\n\nexport default Routing;\n","import React from \"react\";\nimport { Provider } from \"use-http\";\nimport config from \"./config\";\n\nexport const FetchProvider = (props) => {\n  const fetchOptions = {\n    interceptors: {\n      request: async ({ options, url, path, route }) => {\n        options.headers[\"Content-Type\"] = `application/json`;\n        // options.headers[\"Authorization\"] = accessToken;\n        return options;\n      },\n      response: async ({ response }) => {\n        const res = response;\n        return res;\n      },\n    },\n  };\n\n  return <Provider url={config.apiHost} options={fetchOptions} {...props} />;\n};\n","import React from \"react\";\nimport Routing from \"./pages/Routing\";\nimport { FetchProvider } from \"FetchProvider\";\n\nexport default function App() {\n  return (\n    <FetchProvider>\n      <Routing />\n    </FetchProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}