{"version":3,"sources":["config.js","firebase-config.js","pages/SignInPage/index.js","components/AppLayout/index.js","hooks/useDialog.js","pages/ListsOverviewPage/index.js","pages/TodosPage/index.js","pages/Routing.js","FetchProvider.js","App.js","index.js"],"names":["config","apiHost","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","auth","firestore","googleAuthProvider","GoogleAuthProvider","enablePersistence","catch","error","code","console","SignInPage","a","signInWithPopup","result","log","onClick","AppLayout","children","title","currentUser","name","photoURL","width","height","src","alt","signOut","useDialog","resolveRef","useRef","useState","isOpen","setIsOpen","initialData","setInitialData","Promise","resolve","current","open","close","payload","CreateListDialog","setTitle","type","value","onChange","e","target","ListsOverviewPage","uid","email","createDialog","listsRef","collection","query","where","useCollectionData","idField","lists","add","createdAt","FieldValue","serverTimestamp","shared","id","doc","delete","map","item","key","to","handleRemove","CreateTodoDialog","ShareListDialog","listId","list","setEmail","update","Set","handleShare","TodosPage","useParams","shareDialog","useDocument","listDoc","data","todosRef","todos","isDone","join","todo","checked","handleToggleTodo","LoginRouting","path","AppRouting","exact","Routing","useAuthState","user","FetchProvider","props","fetchOptions","interceptors","request","options","url","route","headers","response","res","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e04f56d.chunk.js","sourcesContent":["const config = {\n  apiHost: process.env.REACT_APP_API_HOST,\n\n  firebaseConfig: {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  },\n};\n\nexport default config;\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport config from \"./config\";\n\nfirebase.initializeApp(config.firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nfirestore.enablePersistence().catch(function (error) {\n  if (error.code === \"failed-precondition\") {\n    // Multiple tabs open, persistence can only be enabled\n    // in one tab at a a time.\n  } else if (error.code === \"unimplemented\") {\n    // The current browser does not support all of the\n    // features required to enable persistence\n  }\n  console.error(error);\n});\n","import React from \"react\";\n\nimport { auth, googleAuthProvider } from \"firebase-config\";\n\nfunction SignInPage() {\n  async function signInWithGoogle() {\n    try {\n      const result = await auth.signInWithPopup(googleAuthProvider);\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div>\n      <button onClick={signInWithGoogle}>Sign in with google</button>\n    </div>\n  );\n}\n\nexport default SignInPage;\n","import React from \"react\";\n\nimport { auth } from \"firebase-config\";\n\nfunction AppLayout({ children, title }) {\n  const { name, photoURL } = auth.currentUser;\n\n  function logout() {\n    auth.signOut();\n  }\n\n  return (\n    <div>\n      <div>\n        <div>{name}</div>\n        <img width={48} height={48} src={photoURL} alt=\"\" />\n        <button onClick={logout}>logout</button>\n      </div>\n      {title && (\n        <div>\n          <strong>{title}</strong>\n        </div>\n      )}\n      <div>{children}</div>\n    </div>\n  );\n}\n\nexport default AppLayout;\n","import { useRef, useState } from \"react\";\n\nfunction useDialog() {\n  const resolveRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n\n  async function open(initialData) {\n    setInitialData(initialData);\n    setIsOpen(true);\n    return new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n\n  function close(payload) {\n    setInitialData(null);\n    setIsOpen(false);\n    resolveRef.current && resolveRef.current(payload);\n  }\n\n  return { isOpen, initialData, open, close };\n}\n\nexport default useDialog;\n","import React, { useState } from \"react\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth, firestore } from \"firebase-config\";\n\nfunction CreateListDialog({ close }) {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => close({ title })}>create</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nfunction ListsOverviewPage() {\n  const { uid, email } = auth.currentUser;\n\n  const createDialog = useDialog();\n\n  const listsRef = firestore.collection(\"lists\");\n  const query = listsRef.where(\"shared\", \"array-contains\", email);\n\n  const [lists] = useCollectionData(query, { idField: \"id\" });\n\n  async function handleCreate() {\n    const result = await createDialog.open();\n\n    if (!result) return;\n\n    await listsRef.add({\n      title: result.title,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      shared: [email],\n    });\n  }\n\n  async function handleRemove(id) {\n    await listsRef.doc(id).delete();\n  }\n\n  return (\n    <AppLayout title=\"lists overview\">\n      <button onClick={handleCreate}>create list</button>\n      <div>\n        {lists &&\n          lists.map((item) => (\n            <div key={item.id}>\n              <span>{item.id}</span>{\" \"}\n              <Link to={`/${item.id}`}>{item.title}</Link>\n              <button onClick={() => handleRemove(item.id)}>remove</button>\n            </div>\n          ))}\n      </div>\n      {createDialog.isOpen && <CreateListDialog {...createDialog} />}\n    </AppLayout>\n  );\n}\n\nexport default ListsOverviewPage;\n","import React, { Fragment, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth, firestore } from \"../../firebase-config\";\nimport { useDocument, useCollectionData } from \"react-firebase-hooks/firestore\";\nimport * as firebase from \"firebase\";\n\nfunction CreateTodoDialog({ close }) {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => close({ title })}>create</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nfunction ShareListDialog({ listId, list, close }) {\n  const listsRef = firestore.collection(\"lists\");\n  const [email, setEmail] = useState(\"\");\n\n  async function handleShare() {\n    const shared = list.shared || [];\n    await listsRef.doc(listId).update({\n      shared: [...new Set([...shared, email])],\n    });\n\n    close();\n  }\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div>\n        <button onClick={() => handleShare()}>share</button>\n        <button onClick={() => close()}>close</button>\n      </div>\n    </div>\n  );\n}\n\nfunction TodosPage() {\n  const { uid } = auth.currentUser;\n  const { listId } = useParams();\n\n  const createDialog = useDialog();\n  const shareDialog = useDialog();\n\n  const [listDoc] = useDocument(firestore.doc(`lists/${listId}`));\n  const list = listDoc && listDoc.data();\n  const todosRef = firestore.collection(\"todos\");\n  const query = todosRef.where(\"uid\", \"==\", uid).where(\"listId\", \"==\", listId);\n\n  const [todos] = useCollectionData(query, { idField: \"id\" });\n\n  async function handleCreate() {\n    const result = await createDialog.open();\n\n    if (!result) return;\n\n    await todosRef.add({\n      listId,\n      uid,\n      title: result.title,\n      isDone: false,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n  }\n\n  async function handleToggleTodo(id, isDone) {\n    await todosRef.doc(id).update({ isDone: !isDone });\n  }\n\n  async function handleShare() {\n    shareDialog.open();\n  }\n\n  async function handleUnshare() {\n\n  }\n\n  return (\n    <AppLayout title=\"todos\">\n      <Link to=\"/\">{\"<--\"} back</Link>\n      {list && (\n        <Fragment>\n          <div>{list.title}</div>\n          {list.shared && (\n            <div>\n              shared with: <i>{list.shared.join(\", \")}</i>\n            </div>\n          )}\n        </Fragment>\n      )}\n      <button onClick={handleCreate}>create todo</button>\n      <button onClick={handleShare}>share</button>\n      <div>\n        {todos &&\n          todos.map((todo) => (\n            <div key={todo.id}>\n              <input\n                type=\"checkbox\"\n                checked={todo.isDone}\n                onChange={() => handleToggleTodo(todo.id, todo.isDone)}\n              />\n              <span>{todo.id}</span> <span>{todo.title}</span>\n            </div>\n          ))}\n      </div>\n      {createDialog.isOpen && <CreateTodoDialog {...createDialog} />}\n      {shareDialog.isOpen && (\n        <ShareListDialog {...shareDialog} listId={listId} list={list} />\n      )}\n    </AppLayout>\n  );\n}\n\nexport default TodosPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"firebase-config\";\n\nimport SignInPage from \"./SignInPage\";\nimport ListsOverviewPage from \"./ListsOverviewPage\";\nimport TodosPage from \"./TodosPage\";\n\nfunction LoginRouting() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SignInPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppRouting() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <ListsOverviewPage />\n      </Route>\n      <Route exact path=\"/:listId\">\n        <TodosPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction Routing() {\n  const [user, loading] = useAuthState(auth);\n\n  return loading ? <div>loading...</div> : (\n    <Router>{user ? <AppRouting /> : <LoginRouting />}</Router>\n  );\n}\n\nexport default Routing;\n","import React from \"react\";\nimport { Provider } from \"use-http\";\nimport config from \"./config\";\n\nexport const FetchProvider = (props) => {\n  const fetchOptions = {\n    interceptors: {\n      request: async ({ options, url, path, route }) => {\n        options.headers[\"Content-Type\"] = `application/json`;\n        // options.headers[\"Authorization\"] = accessToken;\n        return options;\n      },\n      response: async ({ response }) => {\n        const res = response;\n        return res;\n      },\n    },\n  };\n\n  return <Provider url={config.apiHost} options={fetchOptions} {...props} />;\n};\n","import React from \"react\";\nimport Routing from \"./pages/Routing\";\nimport { FetchProvider } from \"FetchProvider\";\n\nexport default function App() {\n  return (\n    <FetchProvider>\n      <Routing />\n    </FetchProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}