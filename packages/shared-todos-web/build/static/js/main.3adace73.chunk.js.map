{"version":3,"sources":["config.js","firebase-config.js","components/CreateTag.js","pages/SignInPage/index.js","components/AppLayout/index.js","data.js","pages/ListsOverviewPage/index.js","hooks/useDialog.js","pages/TodosPage/ShareListDialog.js","pages/TodosPage/index.js","pages/Routing.js","FetchProvider.js","App.js","index.js"],"names":["config","apiHost","process","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","auth","firestore","googleAuthProvider","GoogleAuthProvider","enablePersistence","catch","error","code","console","CreateTag","onCreate","text","props","useState","value","setValue","editable","setEditable","handleConfirm","trim","autoFocus","type","size","className","onChange","e","target","onBlur","onPressEnter","onClick","PlusOutlined","Title","Typography","SignInPage","a","signInWithPopup","result","log","Content","level","AppLayout","title","onBack","doShowSettings","doShowAvatar","children","photoURL","currentUser","avatar","src","extra","placement","overlay","Item","signOut","trigger","shape","icon","MoreOutlined","style","border","getListsRef","collection","getTodosRef","Header","setTitle","handleCreate","gutter","flex","placeholder","PlusCircleOutlined","ListsOverviewPage","uid","email","listsRef","query","where","useCollectionData","idField","useListsData","lists","add","createdAt","FieldValue","serverTimestamp","shared","id","doc","delete","header","bordered","map","item","key","to","DeleteOutlined","handleRemove","useDialog","resolveRef","useRef","isOpen","setIsOpen","initialData","setInitialData","Promise","resolve","current","open","close","payload","ShareListDialog","arrayUnion","arrayRemove","TodosPage","listId","useParams","history","useHistory","shareDialog","todosRef","useTodosData","todos","list","useDocument","listDoc","data","useListData","isDone","update","goBack","label","closable","onClose","handleUnshare","todo","checked","handleToggleTodo","LoginRouting","path","AppRouting","exact","Routing","useAuthState","user","FetchProvider","fetchOptions","interceptors","request","options","url","route","headers","response","res","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3adace73.chunk.js","sourcesContent":["const config = {\n  apiHost: process.env.REACT_APP_API_HOST,\n\n  firebaseConfig: {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  },\n};\n\nexport default config;\n","import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport config from \"./config\";\n\nfirebase.initializeApp(config.firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nfirestore.enablePersistence().catch(function (error) {\n  if (error.code === \"failed-precondition\") {\n    // Multiple tabs open, persistence can only be enabled\n    // in one tab at a a time.\n  } else if (error.code === \"unimplemented\") {\n    // The current browser does not support all of the\n    // features required to enable persistence\n  }\n  console.error(error);\n});\n","import React, {  useState } from \"react\";\nimport { Input, Tag } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nfunction CreateTag({ onCreate, text, ...props }) {\n  const [value, setValue] = useState(\"\");\n  const [editable, setEditable] = useState(\"\");\n\n  function handleConfirm() {\n    if (value.trim() !== '') {\n      onCreate(value);\n    }\n\n    setValue('');\n    setEditable(false);\n  }\n\n  return editable ? (\n    <Input\n      autoFocus\n      type=\"text\"\n      size=\"small\"\n      className=\"tag-input\"\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n      onBlur={handleConfirm}\n      onPressEnter={handleConfirm}\n    />\n  ) : (\n    <Tag {...props} className=\"site-tag-plus\" onClick={() => setEditable(true)}>\n      <PlusOutlined /> {text}\n    </Tag>\n  );\n}\n\nexport default CreateTag;\n","import React from \"react\";\n\nimport { auth, googleAuthProvider } from \"firebase-config\";\nimport { Button, Layout, Typography } from \"components\";\n\nimport \"./index.css\";\n\nconst { Title } = Typography;\n\nfunction SignInPage() {\n  async function signInWithGoogle() {\n    try {\n      const result = await auth.signInWithPopup(googleAuthProvider);\n      console.log(result);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <Layout>\n      <Layout.Content>\n        <div className=\"login-content\">\n          <Title level={2}>Shared Todos</Title>\n          <Button onClick={signInWithGoogle}>Sign in with google</Button>\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default SignInPage;\n","import React from \"react\";\nimport { MoreOutlined } from \"@ant-design/icons\";\n\nimport { auth } from \"firebase-config\";\nimport {\n  Layout,\n  Avatar,\n  Row,\n  Col,\n  Typography,\n  Dropdown,\n  Menu,\n  Button,\n  PageHeader,\n} from \"components\";\n\nfunction AppLayout({ title, onBack, doShowSettings, doShowAvatar, children }) {\n  const { photoURL } = auth.currentUser;\n\n  function logout() {\n    auth.signOut();\n  }\n\n  return (\n    <Layout className=\"app-layout\">\n      {/*<Layout.Header>*/}\n      {/*  <Row justify=\"space-between\">*/}\n      {/*    <Row gutter={16} style={{ alignItems: \"baseline\" }}>*/}\n      {/*      <Col>*/}\n      {/*        <Avatar size={36} src={photoURL} />*/}\n      {/*      </Col>*/}\n      {/*      <Col>*/}\n      {/*        <Typography.Title style={{ color: \"white\" }} level={4}>*/}\n      {/*          {title}*/}\n      {/*        </Typography.Title>*/}\n      {/*      </Col>*/}\n      {/*    </Row>*/}\n      {/*    <Row gutter={16}>*/}\n      {/*      <Col></Col>*/}\n      {/*    </Row>*/}\n      {/*  </Row>*/}\n      {/*</Layout.Header>*/}\n      <Layout.Content className=\"app-content\">\n        <PageHeader\n          title={title}\n          onBack={onBack}\n          avatar={doShowAvatar && { src: photoURL }}\n          extra={\n            doShowSettings && [\n              <Dropdown\n                placement=\"bottomRight\"\n                overlay={\n                  <Menu>\n                    <Menu.Item onClick={logout}>Logout</Menu.Item>\n                  </Menu>\n                }\n                trigger={[\"click\"]}\n              >\n                <Button\n                  shape=\"circle\"\n                  icon={<MoreOutlined />}\n                  style={{ border: \"none\" }}\n                />\n              </Dropdown>,\n            ]\n          }\n        >\n          {children}\n        </PageHeader>\n      </Layout.Content>\n    </Layout>\n  );\n}\n\nexport default AppLayout;\n","import { useCollectionData, useDocument } from \"react-firebase-hooks/firestore\";\n\nimport { firestore } from \"firebase-config\";\n\nexport function getListsRef() {\n  const listsRef = firestore.collection(\"lists\");\n\n  return listsRef;\n}\n\nexport function getTodosRef() {\n  const todosRef = firestore.collection(\"todos\");\n\n  return todosRef;\n}\n\nexport function useListsData(email) {\n  const listsRef = getListsRef();\n  const query = listsRef.where(\"shared\", \"array-contains\", email);\n\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n\nexport function useListData(listId) {\n  const [listDoc] = useDocument(firestore.doc(`lists/${listId}`));\n  const list = listDoc && listDoc.data();\n\n  return list;\n}\n\nexport function useTodosData(listId) {\n  const todosRef = getTodosRef();\n  const query = todosRef.where(\"listId\", \"==\", listId);\n  const collectionData = useCollectionData(query, { idField: \"id\" });\n\n  return collectionData;\n}\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport * as firebase from \"firebase\";\nimport { DeleteOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\n\nimport AppLayout from \"components/AppLayout\";\nimport { auth } from \"firebase-config\";\nimport { getListsRef, useListsData } from \"data\";\nimport { Button, List, Input, Col, Row } from \"components\";\n\nfunction Header({ onCreate }) {\n  const [title, setTitle] = useState(\"\");\n\n  function handleCreate(title) {\n    if (title.trim() === \"\") {\n      return;\n    }\n\n    onCreate(title);\n    setTitle(\"\");\n  }\n\n  return (\n    <Row gutter={16}>\n      <Col flex={1}>\n        <Input\n          placeholder=\"Add new list...\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onPressEnter={() => handleCreate(title)}\n        />\n      </Col>\n      <Col>\n        <Button\n          shape=\"circle\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => handleCreate(title)}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction ListsOverviewPage() {\n  const { uid, email } = auth.currentUser;\n\n  const listsRef = getListsRef();\n  const [lists] = useListsData(email);\n\n  async function handleCreate(title) {\n    await listsRef.add({\n      title,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      shared: [email],\n    });\n  }\n\n  async function handleRemove(id) {\n    await listsRef.doc(id).delete();\n  }\n\n  return (\n    <AppLayout title=\"My Todo lists\" doShowSettings doShowAvatar>\n      <List header={<Header onCreate={handleCreate} />} bordered>\n        {lists &&\n          lists.map((item) => (\n            <List.Item key={item.id}>\n              <Link to={`/${item.id}`}>{item.title}</Link>\n              <Button\n                shape=\"circle\"\n                icon={<DeleteOutlined />}\n                onClick={() => handleRemove(item.id)}\n              />\n            </List.Item>\n          ))}\n      </List>\n    </AppLayout>\n  );\n}\n\nexport default ListsOverviewPage;\n","import { useRef, useState } from \"react\";\n\nfunction useDialog() {\n  const resolveRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [initialData, setInitialData] = useState(null);\n\n  async function open(initialData) {\n    setInitialData(initialData);\n    setIsOpen(true);\n    return new Promise((resolve) => {\n      resolveRef.current = resolve;\n    });\n  }\n\n  function close(payload) {\n    setInitialData(null);\n    setIsOpen(false);\n    resolveRef.current && resolveRef.current(payload);\n  }\n\n  return { isOpen, initialData, open, close };\n}\n\nexport default useDialog;\n","import React, { useState } from \"react\";\n\nimport { Input } from \"components\";\n\nfunction ShareListDialog({ onShare }) {\n  const [email, setEmail] = useState(\"\");\n\n  return (\n    <Input\n      autoFocus\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n      onPressEnter={() => onShare(email)}\n    />\n  );\n}\n\nexport default ShareListDialog;\n","import React, { useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { DeleteOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport * as firebase from \"firebase\";\n\nimport AppLayout from \"components/AppLayout\";\nimport useDialog from \"hooks/useDialog\";\nimport { auth } from \"firebase-config\";\nimport {\n  Button,\n  Col,\n  Input,\n  List,\n  PageHeader,\n  Row,\n  Checkbox,\n  Popover,\n  Descriptions,\n  Tag,\n  CreateTag,\n} from \"components\";\nimport ShareListDialog from \"./ShareListDialog\";\nimport { getListsRef, getTodosRef, useListData, useTodosData } from \"data\";\n\nconst {\n  serverTimestamp,\n  arrayUnion,\n  arrayRemove,\n} = firebase.firestore.FieldValue;\n\nfunction Header({ onCreate }) {\n  const [title, setTitle] = useState(\"\");\n\n  function handleCreate(title) {\n    if (title.trim() === \"\") {\n      return;\n    }\n\n    onCreate(title);\n    setTitle(\"\");\n  }\n\n  return (\n    <Row gutter={16}>\n      <Col flex={1}>\n        <Input\n          placeholder=\"Add new todo...\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onPressEnter={() => handleCreate(title)}\n        />\n      </Col>\n      <Col>\n        <Button\n          shape=\"circle\"\n          icon={<PlusCircleOutlined />}\n          onClick={() => handleCreate(title)}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nfunction TodosPage() {\n  const { uid } = auth.currentUser;\n  const { listId } = useParams();\n  const history = useHistory();\n\n  const shareDialog = useDialog();\n\n  const listsRef = getListsRef();\n  const todosRef = getTodosRef();\n\n  const [todos] = useTodosData(listId);\n  const list = useListData(listId) || {};\n\n  async function handleCreate(title) {\n    await todosRef.add({\n      listId,\n      uid,\n      title,\n      isDone: false,\n      createdAt: serverTimestamp(),\n    });\n  }\n\n  async function handleToggleTodo(id, isDone) {\n    await todosRef.doc(id).update({ isDone: !isDone });\n  }\n\n  async function handleRemove(id) {\n    await todosRef.doc(id).delete();\n  }\n\n  async function handleOpenShareDialog() {\n    await shareDialog.open();\n  }\n\n  async function handleShare(email) {\n    await listsRef.doc(listId).update({\n      shared: arrayUnion(email),\n    });\n\n    shareDialog.close();\n  }\n\n  async function handleUnshare(email) {\n    if (auth.currentUser.email === email || list.uid !== uid) {\n      return;\n    }\n\n    await listsRef.doc(listId).update({\n      shared: arrayRemove(email),\n    });\n  }\n\n  return (\n    <AppLayout title={`List: ${list.title || ''}`} onBack={() => history.goBack()}>\n      <Descriptions size=\"small\">\n        <Descriptions.Item label=\"Members\">\n          {list.shared &&\n            list.shared.map((email) => (\n              <Tag\n                key={email}\n                closable={auth.currentUser.email !== email && list.uid === uid}\n                onClose={() => handleUnshare(email)}\n              >\n                {email}\n              </Tag>\n            ))}\n          <CreateTag\n            key=\"add-new-tag\"\n            text=\"Add Member\"\n            onCreate={handleShare}\n          />\n        </Descriptions.Item>\n      </Descriptions>\n      <List header={<Header onCreate={handleCreate} />} bordered>\n        {todos &&\n          todos.map((todo) => (\n            <List.Item key={todo.id}>\n              <Checkbox\n                checked={todo.isDone}\n                onChange={() => handleToggleTodo(todo.id, todo.isDone)}\n              >\n                {todo.title}\n              </Checkbox>\n              <Button\n                shape=\"circle\"\n                icon={<DeleteOutlined />}\n                onClick={() => handleRemove(todo.id)}\n              />\n            </List.Item>\n          ))}\n      </List>\n    </AppLayout>\n  );\n}\n\nexport default TodosPage;\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"firebase-config\";\n\nimport SignInPage from \"./SignInPage\";\nimport ListsOverviewPage from \"./ListsOverviewPage\";\nimport TodosPage from \"./TodosPage\";\n\nfunction LoginRouting() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <SignInPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction AppRouting() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <ListsOverviewPage />\n      </Route>\n      <Route exact path=\"/:listId\">\n        <TodosPage />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction Routing() {\n  const [user, loading] = useAuthState(auth);\n\n  return loading ? <div>loading...</div> : (\n    <Router>{user ? <AppRouting /> : <LoginRouting />}</Router>\n  );\n}\n\nexport default Routing;\n","import React from \"react\";\nimport { Provider } from \"use-http\";\nimport config from \"./config\";\n\nexport const FetchProvider = (props) => {\n  const fetchOptions = {\n    interceptors: {\n      request: async ({ options, url, path, route }) => {\n        options.headers[\"Content-Type\"] = `application/json`;\n        // options.headers[\"Authorization\"] = accessToken;\n        return options;\n      },\n      response: async ({ response }) => {\n        const res = response;\n        return res;\n      },\n    },\n  };\n\n  return <Provider url={config.apiHost} options={fetchOptions} {...props} />;\n};\n","import React from \"react\";\nimport Routing from \"./pages/Routing\";\nimport { FetchProvider } from \"FetchProvider\";\n\nexport default function App() {\n  return (\n    <FetchProvider>\n      <Routing />\n    </FetchProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport 'antd/dist/antd.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}